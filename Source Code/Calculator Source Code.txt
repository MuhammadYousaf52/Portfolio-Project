
// HTML Code

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calculator</title>
    <link rel="stylesheet" href="Calculator.css">
</head>

<body>

    <div class="calculator">
        <div class="display-screen">
            <div class="display-text"></div>
        </div>
        <div class="buttons">

            <button class="btn" id="seven">7</button>
            <button class="btn" id="eight">8</button>
            <button class="btn" id="nine">9</button>
            <button class="btn" id="divide">/</button>

            <button class="btn" id="four">4</button>
            <button class="btn" id="five">5</button>
            <button class="btn" id="six">6</button>
            <button class="btn" id="multiply">*</button>

            <button class="btn" id="one">1</button>
            <button class="btn" id="two">2</button>
            <button class="btn" id="three">3</button>
            <button class="btn" id="minus">-</button>

            <button class="btn" id="zero">0</button>
            <button class="btn" id="left-bracket">(</button>
            <button class="btn" id="right-bracket">)</button>
            <button class="btn" id="modulus">%</button>
            <button id="clear">C</button>
            <button class="btn" id="point">.</button>
            <button id="equal">=</button>
            <button class="btn" id="plus">+</button>
            

        </div>
    </div>
    </div>
    
    <script src="Calculator.js"></script>
</body>

</html>



// CSS Code

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background-color: rgb(58, 43, 24);
    height: 100vh;
    width: 100vw;
    display: flex;
    justify-content: center;
    align-items: center;
}

.calculator {
    width: 350px;
    height: 400px;
    background-color: #34495e;
    border-radius: 10px;
    box-shadow: 3px 3px 5px black;
    display: flex;
    align-items: center;
    flex-direction: column;
}

.display-screen {
    width: 90%;
    height: 70px;
    background-color: #2c3e50;
    color: #fff;
    border-radius: 10px;
    margin-top: 30px;
    padding: 10px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    font-family: monospace;
    overflow: hidden;
}


.display-text {
    font-size: 24px;
    font-weight: bold;
}


.buttons {
    width: 90%;
    height: 65%;
    margin-top: 10px;
    border-radius: 10px;
    background-color: #2c3e50;
    padding: 10px;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-gap: 10px;
}

.buttons button {
    background-color: #4b6584;
    color: #ecf0f1;
    border: none;
    border-radius: 5px;
    font-weight: bold;
    font-size: 18px;
    cursor: pointer;
}


#equal {
    background-color: #27ae60;
    color: #fff;
}

#plus,
#minus,
#multiply,
#divide,
#modulus {
    background-color: #e67e22;
    color: #fff;
}



// Javascript Code

const buttons = document.querySelectorAll(".btn");
const displayText = document.querySelector(".display-text");
const equal = document.getElementById("equal");
const clear = document.getElementById("clear");
buttons.forEach(buttons => {
    buttons.addEventListener("click", function () {
         const value = this.textContent;
const lastChar = displayText.textContent.slice(-1);
        // Count parentheses
        const openCount = (displayText.textContent.match(/\(/g) || []).length;
        const closeCount = (displayText.textContent.match(/\)/g) || []).length;
        // Prevent adding extra ')'
        if (value === ")" && closeCount >= openCount) {
            return; // Do nothing instead of appending
        }
        if(displayText.textContent === "" && /[+\*/%]/.test(value)) return;
        if (/[+\-*/%(]/.test(lastChar) && /[+\-*/%)]/.test(value)) return;
        displayText.textContent += value;
    });
})
equal.addEventListener("click", () => {
    try {
        // Sanitize leading zeros (e.g., 0005 â†’ 5)
        let expression = displayText.textContent.replace(/\b0+(\d)/g, '$1');
        displayText.textContent = eval(expression);
    } catch {
        displayText.textContent = "Error";
    }
})
clear.addEventListener("click", () => {
    displayText.textContent = "";
})
